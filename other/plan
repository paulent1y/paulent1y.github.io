Начнем с типов данных.

Основных типов, используемых нами в языке Python - три. 

Первый тип - числовой. Который в свою очередь можно поделить на целый тип int (от слова integer) и дробный float (от floating point - плавающая точка). 
В таких данных могут быть любые числовые значения: возраст, год события, баланс кошелька, скорость, цену товара, размеры объектов, площадь, объем и так далее. 
Правила записи: записывается просто число, если оно нецелое, дробная часть отделяется знаком точка " . "
Примеры: 2019, 42, 1, 0, 36.6, 900000909




Второй тип - строковый str (от слова string). Такие данные всегда хранятся в кавычках. Здесь может быть записано все что угодно: имена предметов и людей, фразы или слова, буквы, предложения. Если нужно - даже много тысяч строк рассказа. 
Правила записи: содержимое должно браться в двойные либо одиночные кавычки (главное закрывать кавычки так же, как они были открыты)
Примеры: "Сергей", 'Гродно', "Нитроцеллюлоза", "Декабрь", 'двенадцать', "Hello my name is John", "1294"
Обратите внимание: числа, записанные в кавычках, являются текстовым типом, ведут себя аналогично тексту. С ними нельзя совершать математические операции вроде /, *, -. Операция сложения просто "слепит" строки. Таким образом операция "124" + "10" даст результат "12310" - тоже текстовый.



Третий тип - логический bool (от слова boolean в честь Джорджа Буля). Такими данными являются ответы True/False, которые являются аналогом Да/Нет или Правда/Неправда. Такими данными удобно хранить текущее состояние или ответ на вопрос. К примеру находится ли персонаж на земле?, здоровье выше нуля?, хватает ли денег для покупки?, правильный ли был дан ответ на вопрос?, совпадают ли две переменных?.
Правила записи: всего два варианта, либо True, либо False. Обязательно с большой буквы. 

Объекты?

Есть способ узнать, какой тип данных перед нами. Для этого можно воспользоваться функцией type(), записав в скобки те самые данные, тип которых мы хотим узнать.


----------------------------------------------------------------Переменные-------------------------------------------------------------------------
Каждый раз записывать данные вручную - неудобно и глупо, поэтому их можно хранить в переменных. Переменная - область в памяти, которая имеет название и значение. Благодаря наличию названия, ее можно легко взять, и воспользоваться значением, которое находится внутри нее. Данные в переменных зачастую можно менять, что то добавлять или отнимать, считать. Это делает переменные незаменимой частичкой любого языка программирования.

При создании переменной во многих языках необходимо указывать и ее тип (int, float, string), после чего данная переменная сможет хранить строго свой тип данных. Язык Python же обладает таким свойством как "динамическая типизация", что позволяет записывать любые данные в любые переменные, и даже потом их перезаписывать, снова подставив другой тип.

Создание переменной является очень простой операцией. Все что нам нужно - придумать название переменной. Правильным подходом будет назвать ее согласно выполняемой задаче. Например переменная health, которая хранит здоровье персонажа - хороший выбор, в то время как назвать ее буквой h или даже b - плохая идея. Чем больше проект тем больше в нем накапливается таких вот одиночных буквочек и уже через минут 20 работы над проектом они забываются. Нередко случается ситуация вроде "а что это за переменная z? не помню для чего я ее создавал".

Чтобы создать новую переменную, необходимо написать ее имя, затем поставить знак равно, после которого можно записать значение, которое и будет храниться в этой переменной.
x = "1"
Правила: название переменной должно начинаться с буквы, но дальше может содержать как буквы так и цифры, а так же подчеркивания. Пробелом разделять название переменной нельзя. Если необходимо назвать переменную двумя и более словами, стоит воспользоваться одним из данных способов: 
heroName, myCity, hisFavouriteFood. Первое слово записывается с маленькой буквы, последующие слитно с большой. Такой способ написания называется Camel Case и используется во многих языках программирования как принятый по умолчанию.
hero_name, my_city, his_favourite_food - это называется underscore notation, слова разделяются нижним подчеркиванием (символ underscore, от него и название)

Переменные могут хранить любой тип данных, описанный выше. 
name = "Павел" - строковый
age = "10" - строковый(не забываем про кавычки)
age2 = 10 -  а вот тут уже числовой, так как записано без кавычек
isJohnMarried = False - булевая

Помимо этого, есть способы хранить сразу несколько переменных "в одной". 
Для этого существуют списки, кортежи и словари(подробнее обо всех них позже)
Создание списка аналогично созданию переменной. Достаточно указать название, а затем, через знак равно и его содержание:
a = [15,56,42,900, 1092531691]



-----------------------------------------------------------Операции с данными------------------------------------------------------------------


С переменными и хранящимися в них данными можно делать всякие математические штучки. 


Стандартные операции математические операции поддерживаются как есть. Сюда входят следующие операции:
/ - деление
* - умножение
- - вычитание
+ - сложение
Работает все так же как и в математике, хотя порой при делении с нецелым ответом могут выскочить некрасивые дроби, вроде 














